class Router{constructor(t){this.routes=[],this.contentHolderId=t,this._obeyHash=!0,this._setupHashChange()}addRoute(t){this.routes.push(t)}navigateToRoute(t){window.location.hash=t;const s=this.routes.find(s=>s.id===t);if(!s)throw new Error(`Route id ${t} is not a registered route`);this._switchContent(s)}_setupHashChange(){window.onhashchange=function(){if(this._obeyHash){const t=window.location.hash.substr(1);try{this.navigateToRoute(t)}catch(t){}}}.bind(this)}_switchContent(t){const{path:s}=t,o=new XMLHttpRequest,e=this.contentHolderId;o.onload=(()=>{document.getElementById(e).innerHTML=o.response}),o.open("GET",s),o.send()}}class Route{constructor(t,s){this.id=t,this.path=s}}