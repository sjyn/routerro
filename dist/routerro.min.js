class Router{constructor(t){this.onHashChange=void 0,this.routes=[],this.contentHolderId=t,this._obeyHash=!0,this._setupHashChange()}addRoute(t){this.routes.push(t)}navigateToRoute(t,s){window.location.hash=t;const o=this.routes.find(s=>s.id===t);if(!o)throw new Error(`Route id ${t} is not a registered route`);this._switchContent(o,s)}_setupHashChange(){window.onhashchange=function(){if(this._obeyHash){const t=window.location.hash.substr(1);try{this.navigateToRoute(t)}catch(t){}}this.onHashChange&&this.onHashChange()}.bind(this)}_switchContent(t,s){const{path:o}=t,n=new XMLHttpRequest,e=this.contentHolderId;n.onload=(()=>{document.getElementById(e).innerHTML=n.response,s&&s()}),n.open("GET",o),n.send()}}class Route{constructor(t,s){this.id=t,this.path=s}}